---
# eidaws-federator configuration section
eidaws.federator:
  # General configuration options for all resource implementations. The
  # parameters defined within this configuration section can be overridden
  # within the resource specific configuration section.
  common:
    # ----
    # TCP/IP hostname to serve on.
    # Default: localhost
    #
    # hostname: 'localhost'
    #
    # ----
    # TCP/IP port to serve on.
    # Default: 8080
    #
    # port: 8080
    #
    # ----
    # Unix file system path to serve on. Specifying "unix_path" will cause
    # hostname and port arguments to be ignored.
    # Default: None
    #
    # unix_path:
    #
    # ----
    # Serve static files (i.e. version and application.wadl). For development
    # purposes, only. In general, it is much better to handle static files by
    # means of a Reverse Proxy.
    # Default: False
    #
    # serve_static: False
    #
    # ----
    # Absolute path to a logging configuration file. The file must follow the format
    # defined in
    # https://docs.python.org/3/library/logging.config.html#logging-config-fileformat.
    # Default: None
    #
    # logging_conf: ~/work/projects/eidaws/config/logging.conf
    #
    # ----
    # Task worker pool size. If None, the processor's pool_size is determined
    # based on the 'endpoint_connection_limit' (see below).
    # Default: None or int
    #
    # pool_size:
    #
    # ----
    # Maximum body size in bytes of POST requests. If the limit is exceeded a
    # HTTP 413 (Request too large) response is returned.
    # Default: 1024 ** 2
    #
    # client_max_size: 1048576
    #
    # ----
    # Maximum per stream epoch duration in days before returning a HTTP 413
    # (Request too large) response.
    # Allowed values: None or int (days)
    # Default: None
    #
    # max_stream_epoch_duration:
    #
    # ----
    # Maximum total stream epoch duration in days before returning a HTTP 413
    # (Request too large) response.
    # Allowed values: None or int (days)
    # Default: None
    #
    # max_total_stream_epoch_duration:
    #
    # ----
    # Proxy network location in case eidaws-federator is used coupled with e.g.
    # an HTTP caching proxy.
    # Allowed values: None or IPv4(:PORT) or Hostname(:PORT)
    #
    # proxy_netloc:
    #
    # ----
    # Streaming timeout in seconds before the first endpoint request must
    # return with data. If the timeout passed without returing any data a HTTP
    # 413 (Request too large) response is returned.
    # Default: 600
    #
    # streaming_timeout: 600

    # ----
    # Routing specific configuration options
    # ----
    # Absolute StationLite routing URL
    # Default: 'http://localhost/eidaws/routing/1/query'
    #
    # url_routing: 'http://eida-federator.ethz.ch/eidaws/routing/1/query'
    #
    # ----
    # Maximum number of concurrent connections
    # Allowed values: int
    # Default: 100
    #
    # routing_connection_limit: 25
    #
    # ----
    # Consider the X-Forwarded-For HTTP header field and set the header field
    # accordingly when performing endpoint requests. This is particularly
    # useful if the service is deployed behind a reverse-proxy and passing the
    # remote IP address is desired.
    # If set to 0 (default) the X-Forwarded-For header field is not set.
    #
    # num_forwarded: 0

    # ----
    # Endpoint specific configuration options
    # ----
    # Request method used when performing endpoint requests.
    # Allowed values: 'GET' or 'POST'
    # Default: 'GET'
    #
    # endpoint_request_method: 'GET'
    #
    # ----
    # Overall maximum number of concurrent HTTP connections with respect to
    # federated endpoints.
    # Allowed values: int
    # Default: 120; Note(damb): # EIDA datacenters is currently 12
    #
    # endpoint_connection_limit: 120
    #
    # ----
    # Maximum number of concurrent HTTP connections per host with respect to
    # federated endpoints.
    # Allowed values: int
    # Default: 10
    #
    # endpoint_connection_limit_per_host: 10
    #
    # ----
    # Total timeout for acquiring a connection from pool. The time consists
    # connection establishment for a new connection or waiting for a free
    # connection from a pool if pool connection limits are exceeded.
    # Allowed values: None or float (seconds)
    # Default: None
    #
    # endpoint_timeout_connect:
    #
    # ----
    # A timeout for connecting to a peer for a new connection.
    # Allowed values: None or float (seconds)
    # Default: 2
    #
    # endpoint_timeout_sock_connect: 2
    #
    # ----
    # A timeout for reading a portion of data from a peer.
    # Allowed values: None or float (seconds)
    # Default: 30
    #
    # endpoint_timeout_sock_read: 30
    
    # ----
    # Retry-budget related configuration options
    # ----
    # Redis related configuration
    # Absolute URL to Redis server.
    # Default: 'redis://localhost:6379
    #
    # redis_url: 'redis://localhost:6379'
    #
    # Minimum size of the connection pool
    # Default: 1
    #
    # redis_pool_minsize: 1
    #
    # Maximum size of the connection pool
    # Default: 10
    #
    # redis_pool_maxsize: 10
    #
    # Timeout for connections
    # Allowed values: None or int
    # Default: None
    #
    # redis_pool_timeout:
    #
    # ----
    # Threshold in percent before endpoint requests are being dropped.
    # Default: 1.0
    #
    # client_retry_budget_threshold: 1.0
    #
    # ----
    # TTL in seconds for response codes when performing statistics. If 0, the
    # TTL is disabled.
    # Default: 3600
    #
    # client_retry_budget_ttl: 1800
    #
    # ----
    # Rolling window size with respect to response code time series.
    # Default: 10000
    #
    # client_retry_budget_window_size: 4096

    # ----
    # Cache specific configuration options
    # ----
    # Cache configuration. Cache keys are computed based on request parameters
    # (including stream epochs). The cache can be configured with different
    # caching backends:
    #
    #   * cache_type: 'null'
    #   * cache_type: 'redis'
    #
    # If None, both response buffering and caching is disabled.
    # Default: None
    #
    # cache_config:
    #
    # ---
    # Exemplary NullCache configuration (i.e. enabled response buffering, no
    # caching; e.g. for testing purposes):
    #
    # cache_config:
    #   cache_type: 'null'
    #
    # ---
    # Exemplary Redis configuration:
    #
    # cache_config:
    #   cache_type: 'redis'
    #   
    #   Redis cache related configuration options
    #
    #   cache_kwargs:
    #
    # --
    #     Absolute URL to Redis server. Required.
    #
    #     url: 'redis://localhost:6379'
    #
    # --
    #     Cache timeout in seconds. A timeout of 0 indicates that the cache
    #     never expires.
    #
    #     default_timeout: 300
    #
    # --
    #     Compress cached data.
    #     Allowed values: boolean
    #     Default: True
    #
    #     compress:
    # --
    #     Minimum size of the Redis connection pool.
    #
    #     minsize: 1
    #
    # --
    #     Maximum size of the Redis connection pool.
    #
    #     maxsize: 10

  # fdsnws-station-text (i.e. format=text) resource specific configuration
  # options. Parameters defined within configuration section override
  # parameters defined within the 'common' section.
  fdsnws.station.text:

  # fdsnws-station-xml (i.e. format=xml) resource specific configuration
  # options. Parameters defined within configuration section override
  # parameters defined within the 'common' section.
  fdsnws.station.xml:

  # fdsnws-dataselect (i.e. format=miniseed) resource specific configuration
  # options. Parameters defined within configuration section override
  # parameters defined within the 'common' section.
  fdsnws.dataselect.miniseed:
    # In addition to the parameters mentioned in the 'common' configuration
    # section, the resource allows setting the following configuration:
    #
    # ----
    # Splitting factor when performing splitting and aligning for large
    # requests.
    # Default: 2
    #
    # splitting_factor: 2
    #
    # ----
    # Data is buffered using an approach based on spooled temporary files
    # (https://docs.python.org/3/library/tempfile.html#tempfile.SpooledTemporaryFile).
    # The 'buffer_rollover_size' configuration parameter (in bytes) defines
    # when data is buffered on disk. If 0, data is never buffered on disk.
    # Default: 0
    #
    # buffer_rollover_size: 0
    #
    # ----
    # Absolute path to a temporary directory where buffers are stored.
    # Allowed values: None or absolute path
    # Default: None
    #
    # tempdir:

  # eidaws-wfcatalog (i.e. format=json) resource specific configuration
  # options. Parameters defined within configuration section override
  # parameters defined within the 'common' section.
  eidaws.wfcatalog.json:
    # In addition to the parameters mentioned in the 'common' configuration
    # section, the resource allows setting the following configuration:
    #
    # ----
    # Splitting factor when performing splitting and aligning for large
    # requests.
    # Default: 2
    #
    # splitting_factor: 2
    #
    # ----
    # Data is buffered using an approach based on spooled temporary files
    # (https://docs.python.org/3/library/tempfile.html#tempfile.SpooledTemporaryFile).
    # The 'buffer_rollover_size' configuration parameter (in bytes) defines
    # when data is buffered on disk. If 0, data is never buffered on disk.
    # Default: 0
    #
    # buffer_rollover_size: 0
    #
    # ----
    # Absolute path to a temporary directory where buffers are stored.
    # Allowed values: None or absolute path
    # Default: None
    #
    # tempdir:
...
